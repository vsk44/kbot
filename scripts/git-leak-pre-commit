#!/usr/bin/env python3
"""Helper script to be used as a pre-commit hook."""
import os
import sys
import subprocess

def gitleaksEnabled():
    """Determine if the pre-commit hook for gitleaks is enabled."""
    out = subprocess.getoutput("git config --bool hooks.gitleaks")
    if out == "false":
        return False
    return True

def gitleaksInstalled():
    """Determine if gitleaks is installed."""
    try:
        subprocess.run(["gitleaks"], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        return True
    except Exception as e:
        print(f"Error checking gitleaks installation: {e}")
        return False

def install_gitleaks():
    """Install gitleaks."""
    system = sys.platform
    if system == "linux" or system == "darwin":
        subprocess.run(["brew", "install", "gitleaks"], check=True)
    elif system == "win32":
        # Assuming you have some way to install gitleaks on Windows
        # e.g., Chocolatey or manual installation
        # Update the command accordingly
        subprocess.run(["choco", "install", "gitleaks"], check=True)
    else:
        print("Non-supportive system.")
        sys.exit(1)
    run_gitleaks()

def run_gitleaks():
    if gitleaksInstalled():
        exitCode = os.WEXITSTATUS(os.system('gitleaks protect -v --staged'))
        if exitCode == 1:
            print('''Warning: gitleaks has detected sensitive information in your changes.
To disable the gitleaks precommit hook run the following command:

    git config hooks.gitleaks false
''')
            sys.exit(1)
    else:
        print("Gitleaks is not installed. Installing...")
        install_gitleaks()

if gitleaksEnabled():
    run_gitleaks()
else:
    print('gitleaks precommit disabled\
     (enable with `git config hooks.gitleaks true`)')